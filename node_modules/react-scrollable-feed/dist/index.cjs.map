{"version":3,"file":"index.cjs","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\n\r\nexport type ScrollableFeedProps = {\r\n    forceScroll?: boolean;\r\n    animateScroll?: (element: HTMLElement, offset: number) => void;\r\n    onScrollComplete?: () => void;\r\n    changeDetectionFilter?: (previousProps: ScrollableFeedComponentProps, newProps: ScrollableFeedComponentProps) => boolean;\r\n    viewableDetectionEpsilon?: number;\r\n    className?: string;\r\n    onScroll?: (isAtBottom: boolean) => void;\r\n    debug?: boolean\r\n}\r\n\r\ntype ScrollableFeedComponentProps = React.PropsWithChildren<ScrollableFeedProps>;\r\n\r\nclass ScrollableFeed extends React.Component<React.PropsWithChildren<ScrollableFeedProps>> {\r\n    private readonly wrapperRef: React.RefObject<HTMLDivElement>;\r\n    private readonly bottomRef: React.RefObject<HTMLDivElement>;\r\n\r\n    constructor(props: ScrollableFeedProps) {\r\n        super(props);\r\n        this.bottomRef = React.createRef();\r\n        this.wrapperRef = React.createRef();\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n\r\n        if (this.props.debug) console.log(\"Component cstr\");\r\n    }\r\n\r\n    static defaultProps: ScrollableFeedProps = {\r\n        forceScroll: false,\r\n        animateScroll: (element: HTMLElement, offset: number): void => {\r\n            if (element.scrollBy) {\r\n                element.scrollBy({ top: offset });\r\n            }\r\n            else {\r\n                element.scrollTop = offset;\r\n            }\r\n        },\r\n        onScrollComplete: () => {},\r\n        changeDetectionFilter: () => true,\r\n        viewableDetectionEpsilon: 2,\r\n        onScroll: () => {},\r\n    };\r\n\r\n    getSnapshotBeforeUpdate(): boolean {\r\n        if (this.props.debug) console.log(\"Component \", this.getSnapshotBeforeUpdate.name);\r\n        if (this.wrapperRef.current && this.bottomRef.current) {\r\n            const { viewableDetectionEpsilon } = this.props;\r\n            return ScrollableFeed.isViewable(this.wrapperRef.current, this.bottomRef.current, viewableDetectionEpsilon!); //This argument is passed down to componentDidUpdate as 3rd parameter\r\n        }\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(previousProps: ScrollableFeedComponentProps, _previousState: any, snapshot: boolean): void {\r\n        if (this.props.debug) console.log(\"Component \", this.componentDidUpdate.name);\r\n        const { forceScroll, changeDetectionFilter } = this.props;\r\n        const isValidChange = changeDetectionFilter!(previousProps, this.props);\r\n        if (isValidChange && (forceScroll || snapshot) && this.bottomRef.current && this.wrapperRef.current) {\r\n            this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\r\n        }\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (this.props.debug) console.log(\"Component \", this.componentDidMount.name);\r\n        //Scroll to bottom from the start\r\n        if (this.bottomRef.current && this.wrapperRef.current) {\r\n            this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Scrolls a parent element such that the child element will be in view\r\n     * @param parent\r\n     * @param child\r\n     */\r\n    protected scrollParentToChild(parent: HTMLElement, child: HTMLElement): void {\r\n        const { viewableDetectionEpsilon } = this.props;\r\n        if (!ScrollableFeed.isViewable(parent, child, viewableDetectionEpsilon!)) {\r\n            //Source: https://stackoverflow.com/a/45411081/6316091\r\n            const parentRect = parent.getBoundingClientRect();\r\n            const childRect = child.getBoundingClientRect();\r\n\r\n            //Scroll by offset relative to parent\r\n            const scrollOffset = (childRect.top + parent.scrollTop) - parentRect.top;\r\n            const { animateScroll, onScrollComplete } = this.props;\r\n            if (animateScroll) {\r\n                animateScroll(parent, scrollOffset);\r\n                onScrollComplete!();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether a child element is visible within a parent element\r\n     *\r\n     * @param parent\r\n     * @param child\r\n     * @param epsilon\r\n     */\r\n    private static isViewable(parent: HTMLElement, child: HTMLElement, epsilon: number): boolean {\r\n        epsilon = epsilon || 0;\r\n\r\n        //Source: https://stackoverflow.com/a/45411081/6316091\r\n        const parentRect = parent.getBoundingClientRect();\r\n        const childRect = child.getBoundingClientRect();\r\n\r\n        const childTopIsViewable = (childRect.top >= parentRect.top);\r\n\r\n        const childOffsetToParentBottom = parentRect.top + parent.clientHeight - childRect.top;\r\n        const childBottomIsViewable = childOffsetToParentBottom + epsilon >= 0;\r\n\r\n        return childTopIsViewable && childBottomIsViewable;\r\n    }\r\n\r\n    /**\r\n     * Fires the onScroll event, sending isAtBottom boolean as its first parameter\r\n     */\r\n    protected handleScroll(): void {\r\n        const { viewableDetectionEpsilon, onScroll } = this.props;\r\n        if (onScroll && this.bottomRef.current && this.wrapperRef.current) {\r\n            const isAtBottom = ScrollableFeed.isViewable(this.wrapperRef.current, this.bottomRef.current, viewableDetectionEpsilon!);\r\n            onScroll(isAtBottom);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Scroll to the bottom\r\n     */\r\n    public scrollToBottom(): void {\r\n        if (this.bottomRef.current && this.wrapperRef.current) {\r\n            this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        if (this.props.debug) console.log(\"Component \", this.render.name);\r\n\r\n        const style: CSSProperties = {\r\n            maxHeight: \"inherit\",\r\n            height: \"inherit\",\r\n            overflowY: \"auto\",\r\n        };\r\n        const { children, className } = this.props;\r\n        return (\r\n            <div className={className} style={style} ref={this.wrapperRef} onScroll={this.handleScroll}>\r\n                {children}\r\n                <div ref={this.bottomRef}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScrollableFeed;\r\n"],"names":["ScrollableFeed","_React$Component","props","_this","call","wrapperRef","bottomRef","React","createRef","handleScroll","bind","_assertThisInitialized","debug","console","log","_proto","prototype","getSnapshotBeforeUpdate","this","name","current","isViewable","viewableDetectionEpsilon","componentDidUpdate","previousProps","_previousState","snapshot","_this$props","forceScroll","changeDetectionFilter","scrollParentToChild","componentDidMount","parent","child","parentRect","getBoundingClientRect","childRect","_this$props2","animateScroll","onScrollComplete","top","scrollTop","epsilon","clientHeight","_this$props3","onScroll","scrollToBottom","render","_this$props4","className","style","maxHeight","height","overflowY","ref","children","createElement","Component","defaultProps","element","offset","scrollBy"],"mappings":"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"}